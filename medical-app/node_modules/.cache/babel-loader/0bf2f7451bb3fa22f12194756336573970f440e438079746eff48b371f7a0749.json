{"ast":null,"code":"var _jsxFileName = \"/home/jonasz/Dokumenty/pwr/medical-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const getData = async () => {\n    setLoading(true);\n    const url = \"http://localhost:5000/chat\";\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"accept\", \"text/plain\");\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          query: userInput\n        }),\n        headers: myHeaders\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      const answer = await response.text();\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        text: answer\n      }]);\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMessage = () => {\n    if (userInput) {\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"user\",\n        text: userInput\n      }]);\n      getData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-box\",\n        children: [messages.map((item, id) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message message-${item.type}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        }), loading ? \"writing\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleMessage();\n            setUserInput(\"\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ROD0Hbo1qZ/iaKM5n/KgVGmsbY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","App","_s","messages","setMessages","userInput","setUserInput","loading","setLoading","getData","url","myHeaders","Headers","append","response","fetch","method","body","JSON","stringify","query","headers","ok","Error","status","answer","text","prevMessages","type","error","console","message","handleMessage","className","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/jonasz/Dokumenty/pwr/medical-app/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport React from 'react';\n\ninterface IMessage{\n  type: \"bot\" | \"user\";\n  text: string;\n}\n\nfunction App() {\n  const [messages, setMessages] = useState<IMessage[]>([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    setLoading(true)\n    const url = \"http://localhost:5000/chat\"\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"accept\", \"text/plain\");\n\n    try {\n      const response = await fetch(url,\n        {\n          method: \"POST\",\n          body: JSON.stringify({ query: userInput }),\n          headers: myHeaders,\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n\n      const answer = await response.text();\n      setMessages(prevMessages => [...prevMessages, {type: \"bot\", text: answer}]);\n\n    } catch (error) {\n      console.error(error.message);\n    } finally{\n      setLoading(false)\n    }\n  }\n\n  const handleMessage = () => {\n    if (userInput) {\n      setMessages(prevMessages => [...prevMessages, {type: \"user\", text: userInput}]);\n      getData();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <div className='messages-box'>\n          {messages.map((item, id) => {\n            return (\n              <span className={`message message-${item.type}`} key={id} >\n                <p>{item.text}</p>\n              </span>\n            )\n          })}\n          {loading ? \"writing\" : \"\"}\n        </div>\n        <div className='input-form'>\n          <form onSubmit={e => {\n            e.preventDefault();\n            handleMessage();\n            setUserInput(\"\");\n          }}>\n            <input type=\"text\" value={userInput} onChange={(e) => setUserInput(e.target.value)}/>\n            <button type=\"submit\">Sent</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}